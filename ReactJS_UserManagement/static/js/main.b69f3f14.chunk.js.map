{"version":3,"sources":["Components/Header.js","Components/PersonInfo.js","Components/Table.js","Components/AddUser.js","Components/EditUser.js","Components/Search.js","Components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","PersonInfo","checkPermission","role","parseInt","props","EditUser","getUserEditPersonProp","scope","this","id","name","phone","onClick","removeUserTableProp","Table","console","log","listUser","style","width","length","map","value","key","removeUserProp","getUserEditProp","colSpan","AddUser","context","isChangeInput","event","target","setState","checkRenderForm","isFormOpenProp","method","type","onChange","aria-describedby","placeholder","defaultValue","disabled","user","addUserProp","state","fName","fPhone","fRole","changeInput","currentRoleId","editUserInfoFormProp","hideEditUserFormProp","Search","isChangeSearch","searchText","searchFunctionProp","displayButton","closeFormProp","openFormProp","dispayEditUserForm","isShowEditFormProp","editUserInfoProp","hideEditUserFormPropApp","aria-hidden","App","OpenForm","isOpen","CloseForm","getSearchInput","addUser","person","uid","items","dataUser","push","localStorage","setItem","JSON","stringify","getUserEdit","isShowEditForm","editUserInfo","hideEditUserForm","forEach","removeUser","myArray","filter","obj","ListUser","getItem","parse","listUserInit","item","indexOf","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b69f3f14.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n            <div className=\"container\">\r\n              <div className=\"row text-center pt-5\">\r\n                <div className=\"col-12\">\r\n                  <h1>\r\n                    Project quản lý thành viên bằng ReactJS với dữ liệu Json\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass PersonInfo extends Component {\r\n    checkPermission = () => {\r\n        var role = parseInt(this.props.role);\r\n        if (role === 1)\r\n            return \"SuperAdmin\"\r\n        else if (role === 2)\r\n            return \"Admin\"\r\n        else return \"Member\"\r\n    }\r\n    EditUser = () => {\r\n        this.props.getUserEditPersonProp();\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td scope=\"row\">{this.props.id}</td>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.phone}</td>\r\n                <td>\r\n                    {\r\n                    this.checkPermission()\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <div className=\"action\">\r\n                        <button className=\"btn btn-md btn-success\" onClick = {() => this.EditUser()}> Sửa</button>\r\n                        <button className=\"btn btn-md btn-danger\" onClick={(id) => this.props.removeUserTableProp(this.props.id)}> Xóa</button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonInfo;","import React, { Component } from 'react';\r\nimport PersonInfo from './PersonInfo';\r\n\r\nclass Table extends Component {\r\n\r\n\r\n    render() {\r\n        console.log(this.props.listUser);\r\n        return (\r\n            <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th style={{ width: '200px' }}>Tên</th>\r\n                        <th>Điện thoại</th>\r\n                        <th>Quyền</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {\r\n                        (\r\n                            () => {\r\n                                if (typeof this.props.listUser !== 'undefined' && this.props.listUser.length > 0) {\r\n                                    return (this.props.listUser.map((value, key) => {\r\n                                        return <PersonInfo removeUserTableProp = {(id) => this.props.removeUserProp(id)} getUserEditPersonProp = {() => this.props.getUserEditProp(value)} key={key} id={value.id} name={value.name} phone={value.phone} role={value.role} />\r\n                                    })\r\n                                    )\r\n\r\n                                }\r\n                                else return (<tr>\r\n                                    <td colSpan=\"5\" className=\"text-center\">\r\n                                        No data\r\n                                        </td>\r\n                                </tr>)\r\n\r\n                            }\r\n                        )()\r\n\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nclass AddUser extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      // isOpen: false,\r\n      fName:\"\",\r\n      fPhone:\"\",\r\n      fRole:\"\"\r\n    }\r\n  }\r\n  // SwitchForm = (isOpenValue) => {\r\n  //   this.setState({\r\n  //     isOpen: isOpenValue\r\n  //   })\r\n  //   console.log(this.state.isOpen)\r\n  // }\r\n  // OpenForm = () => {\r\n  //   this.setState({\r\n  //     isOpen: true\r\n  //   }, () => console.log(this.state.isOpen))\r\n\r\n  // }\r\n  // CloseForm = () => {\r\n  //   this.setState({\r\n  //     isOpen: false\r\n  //   }, () => console.log(this.state.isOpen))\r\n  // }\r\n\r\n isChangeInput = (event) => {\r\n   const name = event.target.name;\r\n   const value = event.target.value;\r\n   this.setState({\r\n     [name] : value\r\n   });\r\n }\r\n\r\n  // renderForm = () => (\r\n  //   <div className=\"col\">\r\n  //   <div className=\"add-user\">\r\n  //     <h5>Thêm mới User</h5>\r\n  //     <form method=\"get\">\r\n  //       <div className=\"form-group\">\r\n  //         <input type=\"text\" className=\"form-control\" name=\"fName\" onChange = {(event) => this.isChangeInput(event)} aria-describedby=\"helpId\" placeholder=\"Tên\" />\r\n  //       </div>\r\n  //       <div className=\"form-group\">\r\n  //         <input type=\"text\" className=\"form-control\" name=\"fPhone\" onChange = {(event) => this.isChangeInput(event)} aria-describedby=\"helpId\" placeholder=\"Điện thoại\" />\r\n  //       </div>\r\n  //       <div className=\"form-group\">\r\n  //         <select defaultValue=\"0\" className=\"form-control\" name=\"fRole\" onChange = {(event) => this.isChangeInput(event)}>\r\n  //           <option value='0' disabled>--Select Role--</option>\r\n  //           <option value='1'>SuperAdmin </option>\r\n  //           <option value='2'>Admin </option>\r\n  //           <option value='3'>Member</option>\r\n  //         </select>\r\n  //       </div>\r\n  //       <button type=\"submit\" className=\"btn btn-primary mt-2 btn-block\" onClick = {() => this.props.addUserProp(this.state)}>Add User</button>\r\n  //     </form>\r\n  //   </div>\r\n  //   </div>\r\n\r\n  // )\r\n\r\n  checkRenderForm = () => {\r\n    if (this.props.isFormOpenProp) {\r\n      return  (\r\n        <div className=\"col\">\r\n        <div className=\"add-user\">\r\n          <h5>Thêm mới User</h5>\r\n          <form method=\"get\">\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" className=\"form-control\" name=\"fName\" onChange = {(event) => this.isChangeInput(event)} aria-describedby=\"helpId\" placeholder=\"Tên\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" className=\"form-control\" name=\"fPhone\" onChange = {(event) => this.isChangeInput(event)} aria-describedby=\"helpId\" placeholder=\"Điện thoại\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select defaultValue=\"0\" className=\"form-control\" name=\"fRole\" onChange = {(event) => this.isChangeInput(event)}>\r\n                <option value={0} disabled>--Select Role--</option>\r\n                <option value={1}>SuperAdmin </option>\r\n                <option value={2}>Admin </option>\r\n                <option value={3}>Member</option>\r\n              </select>\r\n            </div>\r\n            <button type=\"reset\" className=\"btn btn-primary mt-2 btn-block\" onClick = {(user) => this.props.addUserProp(this.state)}>Add User</button>\r\n          </form>\r\n        </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n\r\n  // renderForm= () => (\r\n  //   <div className=\"row\">\r\n  //   <div className=\"col-12\">\r\n  //   <div className=\"form-group\">\r\n  //   <label htmlFor />\r\n  //   <input type=\"text\" ref={this.setTextInputRef} defaultValue={this.props.titleArticle} className=\"form-control\" name=\"name\" id aria-describedby=\"helpId\" placeholder />\r\n  //   <small id=\"helpId\" className=\"form-text text-muted\">Help text</small>\r\n  //   <div className=\"btn btn-info btn-sm\"  onClick={() => this.hideForm()}>\r\n  //       Save\r\n  //   </div>\r\n  // </div>\r\n  // </div>\r\n  // </div>\r\n\r\n  // )\r\n\r\n  render() {\r\n    // alert(this.props.isFormOpenProp);\r\n    console.log(this.props.isFormOpenProp)\r\n    return (\r\n\r\n<div>\r\n{\r\nthis.checkRenderForm()\r\n}\r\n</div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;","import React, { Component } from 'react';\r\n\r\nclass EditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentRoleId: 0,\r\n      fName:this.props.editUserInfoFormProp.name,\r\n      fPhone:this.props.editUserInfoFormProp.phone,\r\n      fRole:this.props.editUserInfoFormProp.role,\r\n      id:this.props.editUserInfoFormProp.id\r\n      \r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  // checkRenderPermission = (propParamRole) => {\r\n  //   var listRole = [{\"id\":1, \"role\" : \"SuperAdmin\"}, {\"id\":2, \"role\" : \"Admin\"},{\"id\":3, \"role\" : \"Member\"}]\r\n  //   listRole.map((value, key )=>{\r\n  //     // console.log(propParamRole)\r\n  //     // console.log(value.id)\r\n  //     if(propParamRole === value.id )\r\n  //     {\r\n  //       // alert(123)\r\n  //       console.log(123)\r\n  //     return(\r\n  //     <option key = {key} selected defaultValue={value.id}>{value.role} </option>\r\n  //     )\r\n  //     }\r\n  //     else {\r\n  //       // alert(456)\r\n  //       console.log(456)\r\n  //     return(\r\n  //     <option key = {key}  defaultValue={value.id}>{value.role} </option>\r\n  //     )\r\n  //   }\r\n  //   })\r\n  // }\r\n changeInput = (event) =>{\r\n   const name = event.target.name;\r\n   const value = event.target.value;\r\n   this.setState(\r\n     {\r\n     [name]:value,\r\n     }\r\n   );\r\n }\r\n  render() {\r\n    console.log(\"abc\");\r\n    console.log(this.props.editUserInfoFormProp);\r\n    \r\n    return (\r\n      <div className=\"col-12\">\r\n        <div className=\"add-user bg-warning\">\r\n          <h5>Sửa thông tin user</h5>\r\n          <form method=\"get\">\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" className=\"form-control block\" onChange ={(event)=>this.changeInput(event)} name=\"fName\" aria-describedby=\"helpId\" placeholder=\"Tên\" defaultValue={this.props.editUserInfoFormProp.name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" className=\"form-control block\" onChange ={(event)=>this.changeInput(event)} name=\"fPhone\" aria-describedby=\"helpId\" placeholder=\"Điện thoại\" defaultValue={this.props.editUserInfoFormProp.phone} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select className=\"form-control block\" onChange ={(event)=>this.changeInput(event)} name=\"fRole\" defaultValue = {this.props.editUserInfoFormProp.role} >\r\n                <option value={0} disabled>--Select Role--</option>\r\n                <option value={1}>SuperAdmin </option>\r\n                <option value={2}>Admin </option>\r\n                <option value={3}>Member</option>\r\n                {/* {this.checkRenderPermission(this.props.editUserInfoFormProp.role)} */}\r\n              </select>\r\n            </div>\r\n            <button type=\"reset\" className=\"btn btn-primary mt-2 btn-block\" onClick={(id, fName, fPhone, fRole) => this.props.hideEditUserFormProp(this.state.id, this.state.fName, this.state.fPhone, this.state.fRole)}>Save</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;","import React, { Component } from 'react';\r\nimport EditUser from './EditUser';\r\n\r\nclass Search extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            searchText: \"\"\r\n        }\r\n    }\r\n    \r\n\r\n    isChangeSearch = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n         this.setState({\r\n             [name] : value\r\n         },(searchText) => this.props.searchFunctionProp(this.state.searchText))\r\n    }\r\n    displayButton = () => {\r\n            if (this.props.isFormOpenProp) {\r\n                return (<div className=\"btn btn-block btn-outline-warning\" onClick={() => { this.props.closeFormProp() }} >Close User form</div>)\r\n            }\r\n            else {\r\n                return (<div className=\"btn btn-block btn-outline-info\" onClick={() => { this.props.openFormProp() }}>Open User form</div>)\r\n            }\r\n    }\r\n    dispayEditUserForm = () => {\r\n        if(this.props.isShowEditFormProp){\r\n            return(\r\n                <EditUser editUserInfoFormProp = {this.props.editUserInfoProp} hideEditUserFormProp = {(id, fName, fPhone, fRole) => this.props.hideEditUserFormPropApp(id, fName, fPhone, fRole)}/>\r\n            )\r\n        }\r\n        else{\r\n            return true\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n               {\r\n                   this.dispayEditUserForm()\r\n               }\r\n                <div className=\"col-lg-4 col-md-6 search\">\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <input name=\"searchText\"  type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" onChange={(event) => this.isChangeSearch(event)}/>\r\n                            <button className=\"btn btn-md btn-primary\" onClick = {(searchText) => this.props.searchFunctionProp(this.state.searchText)}><i className=\"fa fa-search\" aria-hidden=\"true\"  /></button>\r\n                        </div>\r\n                        {\r\n                            this.displayButton()\r\n                        }\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import '../App.css';\n\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Table from './Table';\nimport AddUser from './AddUser';\nimport Search from './Search';\nimport ListUser from './ListUser'\nimport uid from 'uid';\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      isOpen: false,\n      searchText: \"\",\n      dataUser: ListUser,\n      isShowEditForm: false,\n      editUserInfo: {}\n    }\n  }\n\n  // function App()\n  // {\n\n  // const [isOpen, setFormStatus] = useState(false);\n  // const [searchText, setSearchText] = useState(\"\");\n  // const [dataUser, setDataUser] = useState(ListUser);\n  OpenForm = () => {\n    // alert('Form open')\n    this.setState({\n      isOpen: true\n    }, () => console.log(this.state.isOpen))\n\n  }\n  CloseForm = () => {\n    // alert('Form Close')\n    this.setState({\n      isOpen: false\n    }, () => console.log(this.state.isOpen))\n  }\n\n  getSearchInput = (searchText) => {\n    console.log(searchText)\n    this.setState({\n      searchText: searchText\n    });\n  }\n\n  addUser = (user) => {\n    // this.state.dataUser.sort(function(a, b){return a.id - b.id});\n    var person = { id: uid(4), name: user.fName, phone: user.fPhone, role: user.fRole };\n    console.log(person)\n    var items = this.state.dataUser;\n    items.push(person);\n    this.setState({\n      dataUser: items\n    }, () => console.log(items));\n    localStorage.setItem('listUser', JSON.stringify(items))\n    console.log(this.state.dataUser)\n  }\n\n  getUserEdit = (user) => {\n    this.setState({\n      isShowEditForm: true,\n    });\n    this.setState({\n      editUserInfo: user\n    });\n    // console.log(user);\n\n  }\n  hideEditUserForm = (id, fName, fPhone, fRole) => {\n    // console.log(id, fName, fPhone, fRole)\n    var items = this.state.dataUser;\n    var index, editUser;\n    console.log(items)\n    items.forEach((value, key) => {\n\n      if (value.id === id) {\n        // index = key;\n        value.name = fName\n        value.phone = fPhone\n        value.role = fRole\n      }\n\n    })\n    localStorage.setItem('listUser', JSON.stringify(items))\n    // items.splice(index, 1)\n    // editUser = {\"id\":id, \"name\" : fName, \"phone\":fPhone, \"role\": fRole  }\n    // items.push(editUser)\n    // console.log(items)\n    this.setState({\n      isShowEditForm: false,\n      dataUser: items\n    });\n  }\n\n\ncomponentWillMount() {\n  if(localStorage.getItem('listUser') === null)\n  {\n    localStorage.setItem('listUser', JSON.stringify(ListUser))\n  }\n  else\n  {\n    this.setState({\n      dataUser:JSON.parse(localStorage.getItem('listUser'))\n    });\n  }\n}\n\n  removeUser = (id) => {\n    var items = this.state.dataUser;\n    var myArray = items.filter(function (obj) {\n      return obj.id !== id;\n    });\n    this.setState({\n      dataUser: myArray\n    });\n    localStorage.setItem('listUser', JSON.stringify(myArray))\n  }\n\n  render() {\n    // console.log('123')\n    var listUserInit = [];\n    if (this.state.searchText === \"\" || this.state.searchText === null || typeof this.state.searchText === \"undefined\") {\n      listUserInit = this.state.dataUser\n\n    }\n    else {\n      this.state.dataUser.forEach((item) => {\n\n        if (item.name.indexOf(this.state.searchText) !== -1) {\n          listUserInit.push(item);\n        }\n      })\n    }\n    // var listUserInit = []; \n    // this.state.dataUser.forEach((item)=>{\n    //    if(item.name.indexOf(this.state.searchText) !== -1){\n    //     listUserInit.push(item);\n    //    }\n    // })\n\n    return (\n      <div>\n\n        <div>\n          <Header />\n          <div className=\"content\">\n            <div className=\"container\">\n              <Search editUserInfoProp={this.state.editUserInfo} hideEditUserFormPropApp={(id, fName, fPhone, fRole) => this.hideEditUserForm(id, fName, fPhone, fRole)} isShowEditFormProp={this.state.isShowEditForm} searchFunctionProp={(searchText) => this.getSearchInput(searchText)} openFormProp={() => this.OpenForm()} isFormOpenProp={this.state.isOpen} closeFormProp={() => this.CloseForm()} />\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"border\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <Table removeUserProp={(id) => this.removeUser(id)} getUserEditProp={(user) => this.getUserEdit(user)} listUser={listUserInit} />\n                </div>\n                <AddUser addUserProp={(user) => this.addUser(user)} isFormOpenProp={this.state.isOpen} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <App />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register()\n"],"sourceRoot":""}